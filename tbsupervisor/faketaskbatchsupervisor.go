// Code generated by mockery v1.0.0. DO NOT EDIT.

package tbsupervisor

import (

	mock "github.com/stretchr/testify/mock"

	"flow/steps"
)

// FakeTaskBatchSupervisor is an autogenerated mock type for the FakeTaskBatchSupervisor type
type FakeTaskBatchSupervisor struct {
	mock.Mock
}

// Supervise provides a mock function with given fields: batch, handlerMap
func (_m *FakeTaskBatchSupervisor) Supervise(batch TaskBatch, handlerMap *steps.HandlerMap) (<-chan TaskBatch, <-chan error) {
	ret := _m.Called(batch, handlerMap)

	var r0 <-chan TaskBatch
	if rf, ok := ret.Get(0).(func(TaskBatch, *steps.HandlerMap) <-chan TaskBatch); ok {
		r0 = rf(batch, handlerMap)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan TaskBatch)
		}
	}

	var r1 <-chan error
	if rf, ok := ret.Get(1).(func(TaskBatch, *steps.HandlerMap) <-chan error); ok {
		r1 = rf(batch, handlerMap)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(<-chan error)
		}
	}

	return r0, r1
}
